function generative(gySVG,gySVGObject){Object.assign(gySVG,{constrain:(num,min,max)=>Math.min(Math.max(num,min),max),dist(x1,y1,x2,y2){let a=x1-x2,b=y1-y2;return Math.sqrt(Math.pow(a,2)+Math.pow(b,2))},interp:(start,stop,amount=.5)=>amount*(stop-start)+start,mapRange:(value,start1,stop1,start2,stop2)=>(value-start1)/(stop1-start1)*(stop2-start2)+start2,random(min,max,integer=!0){let random=Math.random()*(max-min)+min;return integer?Math.floor(random):random}}),Object.assign(gySVGObject.prototype,{trackCursor(){let point=this.el.createSVGPoint();return this.el.setAttribute("cursorX",0),this.el.setAttribute("cursorY",0),this.el.addEventListener("pointermove",(event=>{this.el.style.touchAction="none",point.x=event.clientX,point.y=event.clientY;let transformedPoint=point.matrixTransform(this.el.getScreenCTM().inverse());this.el.setAttribute("cursorX",Math.ceil(transformedPoint.x)),this.el.setAttribute("cursorY",Math.ceil(transformedPoint.y))})),this.el.addEventListener("pointerleave",(()=>{this.el.style.touchAction="auto"})),this}})}export{generative};